- name: Set lab vars
  include_vars: "labs/{{ labId }}/config.yaml"

- name: Get wanip
  set_fact:
    wanip: "{{ network | nthhost(ipindex | int) }}"

- name: Main
  block:
    - name: Make .ssh
      file: 
        path: "~/.ssh"
        state: directory
      when: not checkonhost

    - name: Set ssh config
      template:
        src: "templates/ssh.config"
        dest: "~/.ssh/config"
      when: not checkonhost

    - name: Set resolv
      template:
        src: "templates/resolv.conf"
        dest: "/etc/resolv.conf"
      become: true
      when: not checkonhost

    - name: Install package
      include_role:
        name: "{{ item }}"
      with_items: "{{ package }}"

    - name: Set resolv
      template:
        src: "templates/resolv.conf"
        dest: "/etc/resolv.conf"
      become: true
      when: not checkonhost

    - name: Send script to worker
      copy:
        src: "labs/{{ labId }}/"
        dest: "/tmp/{{ taskId }}/"

    - name: Set global vars
      include_tasks: "setglobalvars.yml"
      loop: "{{ data }}"
      loop_control:
        loop_var: nowdata

    - name: Remove temp dir
      file: 
        path: "/tmp/{{ taskId }}"
        state: absent
      ignore_errors: true
      delegate_to: localhost

    - name: Temp dir
      file: 
        path: "/tmp/{{ taskId }}"
        state: directory
      delegate_to: localhost

    - name: Run init (script)
      command: 
        cmd: "{{ init.command }}"
        chdir: "/tmp/{{ taskId }}"
      become: "{{ init.become | default(false) }}"
      when: not ansiblejudgescript

    - name: Run init (ansible)
      include_tasks: "labs/{{ labId }}/init.yml"
      when: ansiblejudgescript

    - name: init taskpath
      set_fact:
        taskpath: ""

    - name: Generate check list
      set_fact:
        checklistdict: "{{ checklistdict | default({}) | combine({ item:(range(checkpoints[item] | length) | list) }) }}"
      with_items: "{{ checkpoints }}"

    - name: Run checkpoints
      include_tasks: "checkgroup.yml"
      loop: "{{ checklistdict | dict2items }}"
      loop_control:
        loop_var: checklist

    - name: Output result
      copy:
        content: "{{ result | to_json }}"
        dest: "/tmp/{{ taskId }}/result"
      delegate_to: localhost

  always:
    - name: Run clear (script)
      command: 
        cmd: "{{ clear.command }}"
        chdir: "/tmp/{{ taskId }}"
      become: "{{ clear.become | default(false) }}"
      ignore_errors: true
      when: not ansiblejudgescript

    - name: Run clear (ansible)
      include_tasks: "labs/{{ labId }}/clear.yml"
      when: ansiblejudgescript

    - name: Remove script on worker
      file: 
        state: absent
        path: "/tmp/{{ taskId }}"
      ignore_errors: true

    - name: Set resolv
      template:
        src: "templates/resolv.conf"
        dest: "/etc/resolv.conf"
      become: true
      ignore_errors: true
      when: not checkonhost
